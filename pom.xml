<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.songyu</groupId>
    <artifactId>songyu-java</artifactId>
    <version>${revision}</version>
    <name>Song Yu Java</name>
    <description>个人 java 后端服务</description>
    <packaging>pom</packaging>

    <modules>
        <module>components</module>
        <module>apps</module>
        <module>domains</module>
    </modules>

    <properties>
        <revision>0.0.1</revision>
        <flatten.maven.plugin.version>1.2.2</flatten.maven.plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.boot.dependencies.version>3.0.4</spring.boot.dependencies.version>
        <lombok.version>1.18.28</lombok.version>
        <junit.jupiter.version>5.9.2</junit.jupiter.version>
        <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
        <maven.dependency.plugin.version>3.3.0</maven.dependency.plugin.version>
        <maven.jar.plugin.version>3.2.2</maven.jar.plugin.version>
        <maven.plugin.plugin.version>3.7.0</maven.plugin.plugin.version>
        <maven.plugin.api.version>3.9.0</maven.plugin.api.version>
        <maven.plugin.annotations.version>3.8.1</maven.plugin.annotations.version>
        <maven.project.version>2.2.1</maven.project.version>
        <javassist.version>3.29.2-GA</javassist.version>
        <bcprov.jdk15on.version>1.70</bcprov.jdk15on.version>
        <jose4j.version>0.9.3</jose4j.version>
        <hutool.all.version>5.8.22</hutool.all.version>
        <mybatis.flex.spring.boot.starter.version>1.6.5</mybatis.flex.spring.boot.starter.version>
        <mybatis.flex.codegen.version>1.6.5</mybatis.flex.codegen.version>
        <jnanoid.version>2.0.0</jnanoid.version>
        <minio.version>8.5.6</minio.version>
        <progressbar.version>0.10.0</progressbar.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--third party-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.7.9</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven.plugin.api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven.plugin.annotations.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-project</artifactId>
                <version>${maven.project.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov.jdk15on.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.bitbucket.b_c</groupId>
                <artifactId>jose4j</artifactId>
                <version>${jose4j.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.all.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mybatis-flex</groupId>
                <artifactId>mybatis-flex-spring-boot-starter</artifactId>
                <version>${mybatis.flex.spring.boot.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mybatis-flex</groupId>
                <artifactId>mybatis-flex-codegen</artifactId>
                <version>${mybatis.flex.codegen.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aventrix.jnanoid</groupId>
                <artifactId>jnanoid</artifactId>
                <version>${jnanoid.version}</version>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <dependency>
                <groupId>me.tongfei</groupId>
                <artifactId>progressbar</artifactId>
                <version>${progressbar.version}</version>
            </dependency>
            <!--components-->
            <dependency>
                <groupId>com.songyu.components</groupId>
                <artifactId>components</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.commonutils</groupId>
                <artifactId>common-utils</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.springboot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.springboot.starter</groupId>
                <artifactId>starter</artifactId>
                <version>${project.version}</version>
                <optional>true</optional>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.springboot.mvc</groupId>
                <artifactId>mvc</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.springboot.data</groupId>
                <artifactId>data</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.springboot.email</groupId>
                <artifactId>email</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.springboot.redis</groupId>
                <artifactId>redis</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.jarlibcrypto</groupId>
                <artifactId>jar-lib-crypto</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.jarlibcrypto.core</groupId>
                <artifactId>jar-lib-crypto-core</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.jarlibcrypto.mavenPlugin</groupId>
                <artifactId>jar-lib-crypto-maven-plugin</artifactId>
                <version>${project.version}</version>
                <type>maven-plugin</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.captcha</groupId>
                <artifactId>captcha</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.lock</groupId>
                <artifactId>lock</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.cache</groupId>
                <artifactId>cache</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.message</groupId>
                <artifactId>message</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.task</groupId>
                <artifactId>task</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.api</groupId>
                <artifactId>api</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.jsonweb</groupId>
                <artifactId>json-web</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.songyu.components.oss</groupId>
                <artifactId>oss</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
                <optional>true</optional>
            </dependency>
            <!--domains-->
            <dependency>
                <groupId>com.songyu.domains</groupId>
                <artifactId>domains</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.domains.auth</groupId>
                <artifactId>auth</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <!--apps-->
            <dependency>
                <groupId>com.songyu.apps</groupId>
                <artifactId>apps</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.songyu.apps.web</groupId>
                <artifactId>web</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!--拷贝依赖到jar外面的lib目录-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>lib/</classpathPrefix>
                                <useUniqueVersions>false</useUniqueVersions>
                            </manifest>
                            <manifestEntries>
                                <Class-Path>./</Class-Path>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <!--指定的依赖路径-->
                                <outputDirectory>
                                    ${project.build.directory}/lib
                                </outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven.plugin.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.songyu.components.jarlibcrypto.mavenPlugin</groupId>
                    <artifactId>jar-lib-crypto-maven-plugin</artifactId>
                    <version>${revision}</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>JarLibCrypto</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten.maven.plugin.version}</version>
                <configuration>
                    <!--是否更新pom文件，记得设置为true，不然无法更新module里的pom版本号-->
                    <!--此处还有更高级的用法，具体下方的参考文档-->
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>